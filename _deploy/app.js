!function(){"use strict";angular.module("NoteFire",["ngRoute","ngSanitize","firebase","ui.tinymce"]).constant("Constants",{FirebaseConfig:{apiKey:"AIzaSyBgxr7HG-wEHoq1M_pcW7OIZMys8XGbRt4",authDomain:"notefireapp.firebaseapp.com",databaseURL:"https://notefireapp.firebaseio.com/",storageBucket:"notefireapp.appspot.com"},TinyMceOptions:{removed_menuitems:"newdocument",statusbar:!1,plugins:["autolink","autoresize","preview","paste","advlist","codesample","image","imagetools","link","media","nonbreaking","pagebreak","print","searchreplace","table","textcolor","textpattern"],toolbar1:"undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | table",toolbar2:"print preview | link image media | forecolor backcolor nonbreaking pagebreak | searchreplace codesample",image_advtab:!0}}).config(["$routeProvider",function(a){a.when("/home",{templateUrl:"js/templates/home.html",controller:"HomeController",controllerAs:"homeCtrl",resolve:{currentAuth:["Auth",function(a){return a.$waitForSignIn()}]}}).when("/logout",{templateUrl:"js/templates/logout.html",controller:"LogoutController",controllerAs:"logoutCtrl",resolve:{currentAuth:["Auth",function(a){return a.$requireSignIn()}]}}).when("/new",{templateUrl:"js/templates/add-note.html",controller:"AddNoteController",controllerAs:"addNoteCtrl",resolve:{currentAuth:["Auth",function(a){return a.$waitForSignIn()}]}}).when("/view/:id",{templateUrl:"js/templates/view-note.html",controller:"ViewNoteController",controllerAs:"viewNoteCtrl",resolve:{currentAuth:["Auth",function(a){return a.$waitForSignIn()}]}}).when("/edit/:id",{templateUrl:"js/templates/edit-note.html",controller:"EditNoteController",controllerAs:"editNoteCtrl",resolve:{currentAuth:["Auth",function(a){return a.$waitForSignIn()}]}}).when("/public",{templateUrl:"js/templates/public.html",controller:"PublicController",controllerAs:"publicCtrl"}).when("/forgotPassword",{templateUrl:"js/templates/forgot-password.html",controller:"ForgotPasswordController",controllerAs:"forgotPasswordCtrl"}).otherwise({templateUrl:"js/templates/login.html",controller:"LoginController",controllerAs:"loginCtrl",resolve:{currentAuth:["Auth",function(a){return a.$waitForSignIn()}]}})}]).run(["$rootScope","$location","Constants",function(a,b,c){firebase.initializeApp(c.FirebaseConfig),a.$on("$routeChangeError",function(a,c,d,e){"AUTH_REQUIRED"===e&&b.path("/login")})}])}(),angular.module("NoteFire").controller("AddNoteController",["$location","NoteService","PublicNoteService","currentAuth","Constants",function(a,b,c,d,e){"use strict";function f(b){angular.element(".saveButton").removeClass("disabled"),angular.element(".saveButtonIcon").hide(),angular.element(".saveButtonText").show(),g.note={},a.url("view/"+b.key)}var g=this;g.note={},g.tinymceOptions=e.TinyMceOptions,angular.element("#newNoteLink").show(),window.scrollTo(0,0),g.addNote=function(){if(!(g.note.title.indexOf("<script")>=0||g.note.content.indexOf("<script")>=0)){angular.element(".saveButton").addClass("disabled"),angular.element(".saveButtonText").hide(),angular.element(".saveButtonIcon").show();var a={title:g.note.title,content:g.note.content,dateCreated:Date.now(),dateUpdated:Date.now()};d?b.addNote(a).then(f):c.addNote(a).then(f)}}}]),angular.module("NoteFire").controller("EditNoteController",["$routeParams","$location","NoteService","PublicNoteService","currentAuth","Constants",function(a,b,c,d,e,f){"use strict";function g(a){angular.element(".saveButton").removeClass("disabled"),angular.element(".saveButtonIcon").hide(),angular.element(".saveButtonText").show(),i.note={},b.path("/view/"+a.key)}function h(){angular.element("#deleteButtonIcon").hide(),angular.element("#deleteButtonText").show(),i.note={},b.url("home")}var i=this;i.showWarning=!1,i.tinymceOptions=f.TinyMceOptions,e?c.getNoteById(a.id).$loaded(function(a){i.note=a,a.isEncrypted&&(i.note.title=sjcl.decrypt(e.uid,a.title),i.note.content=sjcl.decrypt(e.uid,a.content),i.note.isEncrypted=!1),i.noteTitle=i.note.title,i.noteContent=i.note.content}):d.getNoteById(a.id).$loaded(function(a){i.note=a,i.noteTitle=i.note.title,i.noteContent=i.note.content}),angular.element("#newNoteLink").show(),window.scrollTo(0,0),i.saveNote=function(){i.note.title.indexOf("<script")>=0||i.note.content.indexOf("<script")>=0||(angular.element(".saveButton").addClass("disabled"),angular.element(".saveButtonText").hide(),angular.element(".saveButtonIcon").show(),i.note.title=i.noteTitle,i.note.content=i.noteContent,i.note.dateUpdated=Date.now(),e?c.updateNote(i.note).then(g):d.updateNote(i.note).then(g))},i.showDeleteWarning=function(){i.showWarning=!0},i.hideDeleteWarning=function(){i.showWarning=!1},i.deleteNote=function(){angular.element("#deleteButtonText").hide(),angular.element("#deleteButtonIcon").show(),e?c.deleteNote(i.note).then(h):d.deleteNote(i.note).then(h)}}]),angular.module("NoteFire").controller("ForgotPasswordController",["$location","Auth",function(a,b){"use strict";function c(){angular.element("#resetButtonText").hide(),angular.element("#resetButtonIcon").show()}function d(){angular.element("#resetButtonIcon").hide(),angular.element("#resetButtonText").show()}var e=this;e.sendResetLink=function(){e.message="",c(),b.$sendPasswordResetEmail(e.email).then(function(){d(),angular.element(".message").removeClass("error"),e.message="Message sent. Check your inbox for a link to reset your password."}).catch(function(a){d(),angular.element(".message").addClass("error"),"auth/user-not-found"===a.code?e.message="This email address was not found.":e.message=a.message})}}]),angular.module("NoteFire").controller("HomeController",["$location","NoteService","currentAuth",function(a,b,c){"use strict";if(!c)return void a.url("public");var d=this;angular.element("#newNoteLink").show(),window.scrollTo(0,0),b.init(),b.getNotes().$loaded().then(function(a){angular.element("#spinner").hide(),d.notes=a.map(function(a){var b={id:a.$id,dateCreated:a.dateCreated,dateUpdated:a.dateUpdated};a.isEncrypted?(b.title=sjcl.decrypt(c.uid,a.title),b.content=sjcl.decrypt(c.uid,a.content)):(b.title=a.title,b.content=a.content),b.content=b.content.replace(/<a[\s]+([^>]+)>((?:.(?!\<\/a\>))*.)<\/a>/g,"http://...").replace(/<\/?[^>]+>/gi,"").replace(/&nbsp;/g," ").replace(/&rsquo;/g,"'").replace(/&middot;/g,"").substr(0,300);var d="";return b.content=b.content.split(" ").map(function(a){d+=a.length>30?"... ":a+" "}),b.content=d,b})}),d.onCardClick=function(b){a.url("view/"+b)}}]),angular.module("NoteFire").controller("LoginController",["$location","Auth","NoteService",function(a,b,c){"use strict";function d(){angular.element("#signinButton").addClass("disabled"),angular.element("#signinButtonText").hide(),angular.element("#signinButtonIcon").show()}function e(){angular.element("#signinButton").removeClass("disabled"),angular.element("#signinButtonIcon").hide(),angular.element("#signinButtonText").show()}function f(){angular.element("#registerButton").addClass("disabled"),angular.element("#registerButtonText").hide(),angular.element("#registerButtonIcon").show()}function g(){angular.element("#registerButton").removeClass("disabled"),angular.element("#registerButtonIcon").hide(),angular.element("#registerButtonText").show()}var h=this;b.$getAuth()&&a.url("home"),a.search().register&&$("#loginTabs a:last").tab("show"),angular.element("#newNoteLink").hide(),angular.element("#loginTabs a").click(function(a){a.preventDefault(),$(this).tab("show")}),h.signin=function(){h.signinError=null,d(),b.$signInWithEmailAndPassword(h.email,h.password).then(function(b){e(),a.url("home")}).catch(function(a){e(),"auth/user-not-found"===a.code?h.signinError="Email Address Not Found":"auth/wrong-password"===a.code?h.signinError="Invalid Password":h.signinError=a.message})},h.register=function(){return h.registerError=null,h.password!==h.confirmPassword?void(h.registerError="Passwords do not match"):(f(),void b.$createUserWithEmailAndPassword(h.email,h.password).then(function(b){var d=firebase.database().ref("notes/"+b.uid);c.init(d),c.addNote({title:"Your First Note!",content:"Welcome to FireNote!",dateCreated:Date.now(),dateUpdated:Date.now()}).then(function(){g(),a.path("home")}).catch(function(a){g(),h.registerError=a.message})}).catch(function(a){g(),h.registerError=a.message}))}}]),angular.module("NoteFire").controller("LogoutController",["$location","Auth","currentAuth","NoteService",function(a,b,c,d){"use strict";var e=this;b.$onAuthStateChanged(function(b){b||a.url("login")}),e.logout=function(){d.close(),b.$signOut()},e.logout()}]),angular.module("NoteFire").controller("PublicController",["$location","PublicNoteService",function(a,b){"use strict";var c=this;angular.element("#newNoteLink").show(),window.scrollTo(0,0),b.init(),b.getNotes().$loaded().then(function(a){angular.element("#spinner").hide(),c.notes=a.map(function(a){var b={id:a.$id,dateCreated:a.dateCreated,dateUpdated:a.dateUpdated,title:a.title,content:a.content.replace(/<a[\s]+([^>]+)>((?:.(?!\<\/a\>))*.)<\/a>/g,"http://...").replace(/<\/?[^>]+>/gi,"").replace(/&nbsp;/g," ").replace(/&rsquo;/g,"'").replace(/&middot;/g,"").substr(0,300)},c="";return b.content=b.content.split(" ").map(function(a){c+=a.length>30?"... ":a+" "}),b.content=c,b})}),c.onCardClick=function(b){a.url("view/"+b)}}]),angular.module("NoteFire").controller("ViewNoteController",["$routeParams","NoteService","PublicNoteService","currentAuth",function(a,b,c,d){"use strict";var e=this;e.tinymceOptions={readonly:!0,toolbar:!1,menubar:!1,statusbar:!1,plugins:["autoresize","codesample"],setup:function(a){a.settings.readonly&&a.on("init",function(){$(a.getBody()).on("click","a[href]",function(a){window.open($(a.currentTarget).attr("href"),"_blank")})})}},d?b.getNoteById(a.id).$loaded(function(a){e.note=a,a.isEncrypted&&(e.note.title=sjcl.decrypt(d.uid,a.title),e.note.content=sjcl.decrypt(d.uid,a.content),e.note.isEncrypted=!1)}):c.getNoteById(a.id).$loaded(function(a){e.note=a}),angular.element("#newNoteLink").show(),window.scrollTo(0,0)}]),angular.module("NoteFire").directive("notefireFooter",function(){return{restrict:"E",templateUrl:"js/directives/footer.html"}}),angular.module("NoteFire").directive("navBar",function(){return{restrict:"E",templateUrl:"js/directives/navbar.html",controllerAs:"navBarCtrl",controller:["Auth",function(a){"use strict";a.$onAuthStateChanged(function(a){a?(angular.element(".isNotAuthenticated").hide(),angular.element(".isAuthenticated").show()):(angular.element(".isAuthenticated").hide(),angular.element(".isNotAuthenticated").show())})}]}}),angular.module("NoteFire").directive("publicWarning",function(){return{restrict:"E",templateUrl:"js/directives/public-warning.html",controllerAs:"publicWarningCtrl",controller:["Auth",function(a){"use strict";var b=this;b.isVisible=!1,a.$onAuthStateChanged(function(a){b.isVisible=!a})}]}}),angular.module("NoteFire").directive("spinner",function(){return{restrict:"E",templateUrl:"js/directives/spinner.html"}}),angular.module("NoteFire").factory("Auth",["$firebaseAuth",function(a){return a()}]),angular.module("NoteFire").service("NoteService",["$firebaseArray","$firebaseObject","Auth",function(a,b,c){"use strict";var d,e=this;e.init=function(b){if(!b){var e=c.$getAuth();b=e?firebase.database().ref("notes/"+e.uid):"notes/public"}d=a(b)},e.close=function(){d&&d.$destroy()},e.getNotes=function(){return d},e.addNote=function(b){var e=c.$getAuth();if(b.title=sjcl.encrypt(e.uid,b.title),b.content=sjcl.encrypt(e.uid,b.content),b.isEncrypted=!0,d)return d.$add(b);var f=firebase.database().ref("notes/"+e.uid),g=a(f);return g.$add(b)},e.deleteNote=function(a){if(a.$remove)return a.$remove();throw new Error("error deleting note")},e.getNoteById=function(a){var d=c.$getAuth(),e=firebase.database().ref("notes/"+d.uid+"/"+a);return b(e)},e.updateNote=function(a){var b=c.$getAuth();if(a.title=sjcl.encrypt(b.uid,a.title),a.content=sjcl.encrypt(b.uid,a.content),a.isEncrypted=!0,a.$save)return a.$save();throw new Error("error saving note")}}]),angular.module("NoteFire").service("PublicNoteService",["$firebaseArray","$firebaseObject",function(a,b){"use strict";var c,d=this;d.init=function(){c=a(firebase.database().ref("notes/public"))},d.getNotes=function(){return c},d.addNote=function(b){if(c)return c.$add(b);var d=firebase.database().ref("notes/public"),e=a(d);return e.$add(b)},d.deleteNote=function(a){if(a.$remove)return a.$remove();throw new Error("error deleting note")},d.getNoteById=function(a){var c=firebase.database().ref("notes/public/"+a);return b(c)},d.updateNote=function(a){if(a.$save)return a.$save();throw new Exception("error saving note")}}]);